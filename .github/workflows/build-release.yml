name: Build and Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Release Please
        id: release_please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install fyne-cross
        if: ${{ steps.release_please.outputs.release_created == 'true' }}
        run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Cross-Compile for Windows
        if: ${{ steps.release_please.outputs.release_created == 'true' }}
        run: fyne-cross windows --app-id com.keestucker.husk

      - name: Cross-Compile for Linux
        if: ${{ steps.release_please.outputs.release_created == 'true' }}
        run: fyne-cross linux --app-id com.keestucker.husk

      - name: Upload Windows amd64 Build
        if: ${{ steps.release_please.outputs.release_created == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release_please.outputs.tag_name }} \
            ./fyne-cross/bin/windows-amd64/husk.exe \
            --name "husk-windows-amd64.exe" \
            --content-type "application/octet-stream"

      - name: Upload Linux amd64 Build
        if: ${{ steps.release_please.outputs.release_created == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release_please.outputs.tag_name }} \
            ./fyne-cross/bin/linux-amd64/husk \
            --name "husk-linux-amd64" \
            --content-type "application/octet-stream"