name: Build and Release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Set up Fyne Dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      - name: Go Mod Tidy
        run: go mod tidy

      - name: Build Application
        run: go build -v -o husk

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: "Release Please"
        id: release_please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Release Information
        id: extract_release_info
        if: ${{ steps.release_please.outputs.releases_created == 'true' }}
        run: |
          echo '${{ steps.release_please.outputs.releases_created }}' > releases_created.json
          TAG_NAME=$(jq -r '.[0].tagName' releases_created.json)
          UPLOAD_URL=$(jq -r '.[0].uploadUrl' releases_created.json)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

      - name: Upload Release Asset
        if: ${{ steps.release_please.outputs.releases_created == 'true' }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./husk
          asset_name: husk
          asset_content_type: application/octet-stream
